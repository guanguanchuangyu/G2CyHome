// <auto-generated />
using System;
using G2CyHome.EntityConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Migrations
{
    [DbContext(typeof(DeviceDbContext))]
    [Migration("20220417101847_add_devicelabel")]
    partial class add_devicelabel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("G2CyHome.Devices.Entities.DeviceRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasComment("唯一标识");

                    b.Property<int>("ControlMode")
                        .HasColumnType("int")
                        .HasColumnName("control_mode")
                        .HasComment("控制方式");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time")
                        .HasComment("删除时间");

                    b.Property<string>("Descript")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasColumnName("descript")
                        .HasComment("设备描述");

                    b.Property<string>("DeviceIdentity")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasColumnName("device_identity")
                        .HasComment("设备标识");

                    b.Property<int>("DevicetypeId")
                        .HasColumnType("int")
                        .HasColumnName("devicetype_id")
                        .HasComment("设备类型id");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("name")
                        .HasComment("设备名称");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("room_id")
                        .HasComment("所属房间");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("设备状态");

                    b.HasKey("Id");

                    b.HasIndex("DevicetypeId")
                        .HasDatabaseName("IX_Device_TypeId");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("IX_Device_RoomId");

                    b.ToTable("devices_devicerecord");

                    b
                        .HasComment("设备记录");
                });

            modelBuilder.Entity("G2CyHome.Devices.Entities.SensorData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("唯一标识");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time")
                        .HasComment("创建时间");

                    b.Property<string>("Data")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("data")
                        .HasComment("数据信息");

                    b.Property<string>("DeviceIdentity")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasColumnName("device_identity")
                        .HasComment("设备标识");

                    b.HasKey("Id");

                    b.HasIndex("DeviceIdentity")
                        .HasDatabaseName("IX_Sensor_Identity");

                    b.ToTable("devices_sensordata");

                    b
                        .HasComment("传感器数据");
                });

            modelBuilder.Entity("G2CyHome.Systems.Entities.DeviceLabel", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .HasColumnType("char(36)");

                    b.Property<int>("LabelId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("DeviceId", "LabelId")
                        .HasName("PK_device_label");

                    b.HasIndex("LabelId")
                        .HasDatabaseName("IX_Devicelabel_LabelId");

                    b.ToTable("systems_devicelabel");
                });

            modelBuilder.Entity("G2CyHome.Systems.Entities.DeviceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("唯一标识");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time")
                        .HasComment("删除时间");

                    b.Property<string>("Logo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("logo")
                        .HasComment("类型logo");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("name")
                        .HasComment("类型名称");

                    b.Property<string>("PicPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("pic_path")
                        .HasComment("类型图片");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("remark")
                        .HasComment("备注信息");

                    b.HasKey("Id");

                    b.ToTable("systems_devicetype");

                    b
                        .HasComment("设备类型");
                });

            modelBuilder.Entity("G2CyHome.Systems.Entities.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("唯一标识");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time")
                        .HasComment("删除时间");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasColumnName("name")
                        .HasComment("标签名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasColumnName("remark")
                        .HasComment("备注");

                    b.HasKey("Id");

                    b.ToTable("systems_label");

                    b
                        .HasComment("标签管理");
                });

            modelBuilder.Entity("G2CyHome.Systems.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("唯一标识");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time")
                        .HasComment("创建时间");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creator_id")
                        .HasComment("创建人id");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time")
                        .HasComment("删除时间");

                    b.Property<int>("Floor")
                        .HasColumnType("int")
                        .HasColumnName("floor")
                        .HasComment("所在楼层");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_time")
                        .HasComment("最后更新时间");

                    b.Property<int?>("LastUpdaterId")
                        .HasColumnType("int")
                        .HasColumnName("last_updater_id")
                        .HasComment("更新者编号");

                    b.Property<string>("Logo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasColumnName("logo")
                        .HasComment("房间logo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("name")
                        .HasComment("房间名称");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order")
                        .HasComment("排序");

                    b.Property<string>("PicPath")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasColumnName("pic_path")
                        .HasComment("房间图片");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasColumnName("remark")
                        .HasComment("备注信息");

                    b.HasKey("Id");

                    b.ToTable("systems_room");

                    b
                        .HasComment("房间管理");
                });

            modelBuilder.Entity("G2CyHome.Devices.Entities.DeviceRecord", b =>
                {
                    b.HasOne("G2CyHome.Systems.Entities.DeviceType", "DeviceType")
                        .WithMany()
                        .HasForeignKey("DevicetypeId")
                        .HasConstraintName("FK_Device_Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G2CyHome.Systems.Entities.Room", "Room")
                        .WithMany("Devices")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Device_Room")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceType");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("G2CyHome.Devices.Entities.SensorData", b =>
                {
                    b.HasOne("G2CyHome.Devices.Entities.DeviceRecord", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceIdentity")
                        .HasConstraintName("FK_Sensor_identity")
                        .HasPrincipalKey("DeviceIdentity");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("G2CyHome.Systems.Entities.DeviceLabel", b =>
                {
                    b.HasOne("G2CyHome.Devices.Entities.DeviceRecord", "Device")
                        .WithMany("DeviceLabels")
                        .HasForeignKey("DeviceId")
                        .HasConstraintName("FK_devicelabel_device")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G2CyHome.Systems.Entities.Label", "Label")
                        .WithMany("DeviceLabels")
                        .HasForeignKey("LabelId")
                        .HasConstraintName("FK_devicelabel_label")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("G2CyHome.Devices.Entities.DeviceRecord", b =>
                {
                    b.Navigation("DeviceLabels");
                });

            modelBuilder.Entity("G2CyHome.Systems.Entities.Label", b =>
                {
                    b.Navigation("DeviceLabels");
                });

            modelBuilder.Entity("G2CyHome.Systems.Entities.Room", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
