//------------------------------------------------------------------------------
// <auto-generated>
//    此代码由代码生成器生成。
//    手动更改此文件可能导致应用程序出现意外的行为。
//    如果重新生成代码，对此文件的任何修改都会丢失。
//    如果需要扩展此类：可遵守如下规则进行扩展：
//      1.横向扩展：如需添加额外的映射，可新建文件“DeviceTypeConfiguration.cs”的分部类“public partial class DeviceTypeConfiguration”实现分部方法 EntityConfigurationAppend 进行扩展
// </auto-generated>
//
// <copyright file="DeviceTypeConfiguration.generated.cs" company="无">
//     
// </copyright>
// <site></site>
// <last-editor>ggcy</last-editor>
// -----------------------------------------------------------------------

using System;
using System.Collections.Generic;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

using OSharp.Entity;

using G2CyHome.Systems.Entities;


namespace G2CyHome.EntityConfiguration.Systems
{
    /// <summary>
    /// 实体配置类：设备类型信息
    /// </summary>
    public partial class DeviceTypeConfiguration : EntityTypeConfigurationBase<DeviceType, int>
    {
        /// <summary>
        /// 重写以实现实体类型各个属性的数据库配置
        /// </summary>
        /// <param name="builder">实体类型创建器</param>
        public override void Configure(EntityTypeBuilder<DeviceType> builder)
        {
              //表名
              builder.ToTable("devicetype").HasComment("设备类型");
              // 列名
              builder.Property(x => x.Id).HasColumnName("id").HasComment("唯一标识");
              builder.Property(x => x.Name).HasColumnName("name").HasComment("类型名称");
              builder.Property(x => x.Logo).HasColumnName("logo").HasComment("类型logo");
              builder.Property(x => x.PicPath).HasColumnName("pic_path").HasComment("类型图片");
              builder.Property(x => x.Remark).HasColumnName("remark").HasComment("备注信息");

              builder.Property(x => x.CreatedTime).HasColumnName("created_time").HasComment("创建时间");

              builder.Property(x => x.DeletedTime).HasColumnName("deleted_time").HasComment("删除时间");
            EntityConfigurationAppend(builder);
        }

        /// <summary>
        /// 额外的数据映射
        /// </summary>
        partial void EntityConfigurationAppend(EntityTypeBuilder<DeviceType> builder);
    }
}
